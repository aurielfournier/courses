setwd("C:/Users/avanderlaar/Dropbox/r/Distance")
#############################################################
###########Sora
############################################################
#2012 birds
birds12all = read.csv("Birds2012.csv", header=T)
birds13all = read.csv("Birds2013.csv", header=T)
birds12 = subset(birds12all, spp=="s")
birds13 = subset(birds13all, spp=="s")
#first the data has to be binned. We use 12 bins 0-1, 1-2, etc etc since our farthest observation is a 12
birds12$bin1 = ifelse(birds12$distance<1,1,0)
birds12$bin2 = ifelse(birds12$distance<2,ifelse(birds12$distance>.9,1,0),0)
birds12$bin3 = ifelse(birds12$distance<3,ifelse(birds12$distance>1.9,1,0),0)
birds12$bin4 = ifelse(birds12$distance<4,ifelse(birds12$distance>2.9,1,0),0)
birds12$bin5 = ifelse(birds12$distance<5,ifelse(birds12$distance>3.9,1,0),0)
birds12$bin6 = ifelse(birds12$distance<6,ifelse(birds12$distance>4.9,1,0),0)
birds12$bin7 = ifelse(birds12$distance<7,ifelse(birds12$distance>5.9,1,0),0)
birds12$bin8 = ifelse(birds12$distance<8,ifelse(birds12$distance>6.9,1,0),0)
birds12$bin9 = ifelse(birds12$distance<9,ifelse(birds12$distance>7.9,1,0),0)
birds12$bin10 = ifelse(birds12$distance<10,ifelse(birds12$distance>8.9,1,0),0)
birds12$bin11 = ifelse(birds12$distance<11,ifelse(birds12$distance>9.9,1,0),0)
birds12$bin12 = ifelse(birds12$distance<12,ifelse(birds12$distance>10.9,1,0),0)
birds13$bin1 = ifelse(birds13$distance<1,1,0)
birds13$bin2 = ifelse(birds13$distance<2,ifelse(birds13$distance>.9,1,0),0)
birds13$bin3 = ifelse(birds13$distance<3,ifelse(birds13$distance>1.9,1,0),0)
birds13$bin4 = ifelse(birds13$distance<4,ifelse(birds13$distance>2.9,1,0),0)
birds13$bin5 = ifelse(birds13$distance<5,ifelse(birds13$distance>3.9,1,0),0)
birds13$bin6 = ifelse(birds13$distance<6,ifelse(birds13$distance>4.9,1,0),0)
birds13$bin7 = ifelse(birds13$distance<7,ifelse(birds13$distance>5.9,1,0),0)
birds13$bin8 = ifelse(birds13$distance<8,ifelse(birds13$distance>6.9,1,0),0)
birds13$bin9 = ifelse(birds13$distance<9,ifelse(birds13$distance>7.9,1,0),0)
birds13$bin10 = ifelse(birds13$distance<10,ifelse(birds13$distance>8.9,1,0),0)
birds13$bin11 = ifelse(birds13$distance<11,ifelse(birds13$distance>9.9,1,0),0)
birds13$bin12 = ifelse(birds13$distance<12,ifelse(birds13$distance>10.9,1,0),0)
round2_12 = subset(birds12, round==2)
round2_12s = round2_12[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round3_12 = subset(birds12, round==3)
round3_12s = round3_12[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round1_13 = subset(birds13, round==1)
round1_13s = round1_13[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round2_13 = subset(birds13, round==2)
round2_13s = round2_13[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round3_13 = subset(birds13, round==3)
round3_13s = round3_13[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round4_13 = subset(birds13, round==4)
round4_13s = round4_13[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
#2012 round 2
melt12_2 = melt(round2_12s)
cast12_2 = cast(melt12_2, impounda ~ variable | nighta, sum)
merge12_2a = merge(cast12_2$a, cast12_2$b, by="impounda", all=T)
merge12_2b = merge(merge12_2a, cast12_2$c, by="impounda", all=T)
#2012 round 3
melt12_3 = melt(round3_12s)
cast12_3 = cast(melt12_3, impounda ~ variable | nighta, sum)
merge12_3a = merge(cast12_3$a, cast12_3$b, by="impounda", all=T)
merge12_3b = merge(merge12_3a, cast12_3$c, by="impounda", all=T)
#2013 round 1
melt13_1 = melt(round1_13s)
cast13_1 = cast(melt13_1, impounda ~ variable | nighta, sum)
cast13_1g = data.frame(impounda="34A", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_1h = data.frame(impounda="38A", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
merge13_1a = merge(cast13_1$a, cast13_1$b, by="impounda", all=T, suffixes=c("a", "b"))
merge13_1b = merge(merge13_1a, cast13_1$c, by="impounda", all=T, suffixes=c("b", "c"))
merge13_1c = merge(merge13_1b, cast13_1$d, by="impounda", all=T, suffixes=c("c", "d"))
merge13_1d = merge(merge13_1c, cast13_1$e, by="impounda", all=T, suffixes=c("d", "e"))
merge13_1e = merge(merge13_1d, cast13_1$f, by="impounda", all=T, suffixes=c("e", "f"))
merge13_1f = merge(merge13_1e, cast13_1g, by="impounda", all=T, suffixes=c("f", "g"))
merge13_1g = merge(merge13_1f, cast13_1h, by="impounda", all=T, suffixes=c("g", "h"))
#2013 round 2
melt13_2 = melt(round2_13s)
cast13_2 = cast(melt13_2, impounda ~ variable | nighta, sum)
cast13_2f = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_2g = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_2h = data.frame(impounda="38a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
merge13_2a = merge(cast13_2$a, cast13_2$b, by="impounda", all=T, suffixes=c("a", "b"))
merge13_2b = merge(merge13_2a, cast13_2$c, by="impounda", all=T, suffixes=c("b", "c"))
merge13_2c = merge(merge13_2b, cast13_2$d, by="impounda", all=T, suffixes=c("c", "d"))
merge13_2d = merge(merge13_2c, cast13_2$e, by="impounda", all=T, suffixes=c("d", 'e'))
merge13_2e = merge(merge13_2d, cast13_2f, by="impounda", all=T, suffixes=c("e", "f"))
merge13_2f = merge(merge13_2e, cast13_2g, by="impounda", all=T, suffixes=c("f", "g"))
merge13_2g = merge(merge13_2f, cast13_2h, by="impounda", all=T, suffixes=c("g", "h"))
#2013 round 3
melt13_3 = melt(round3_13s)
cast13_3 = cast(melt13_3, impounda ~ variable | nighta, sum)
merge13_3a = merge(cast13_3$a, cast13_3$b, by="impounda", all=T, suffixes=c("a", "b"))
merge13_3b = merge(merge13_3a, cast13_3$c, by="impounda", all=T, suffixes=c("b", "c"))
merge13_3c = merge(merge13_3b, cast13_3$d, by="impounda", all=T, suffixes=c("c", "d"))
merge13_3d = merge(merge13_3c, cast13_3$e, by="impounda", all=T, suffixes=c("d", "e"))
merge13_3e = merge(merge13_3d, cast13_3$f, by="impounda", all=T, suffixes=c("e", "f"))
merge13_3f = merge(merge13_3e, cast13_3$g, by="impounda", all=T, suffixes=c("f", "g"))
merge13_3g = merge(merge13_3f, cast13_3$h, by="impounda", all=T, suffixes=c("g", "h"))
#2013 round 4
melt13_4 = melt(round4_13s)
cast13_4 = cast(melt13_4, impounda ~ variable | nighta, sum)
cast13_4b = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_4d = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_4h = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
merge13_4a = merge(cast13_4$a, cast13_4b, by="impounda", all=T, suffixes=c("a", "b"))
merge13_4b = merge(merge13_4a, cast13_4$c, by="impounda", all=T, suffixes=c("b", "c"))
merge13_4c = merge(merge13_4b, cast13_4d, by="impounda", all=T, suffixes=c("c", "d"))
merge13_4d = merge(merge13_4c, cast13_4$e, by="impounda", all=T, suffixes=c("d", "e"))
merge13_4e = merge(merge13_4d, cast13_4$f, by="impounda", all=T, suffixes=c("e", "f"))
merge13_4f = merge(merge13_4e, cast13_4$g, by="impounda", all=T, suffixes=c("f", "g"))
merge13_4g = merge(merge13_4f, cast13_4h, by="impounda", all=T, suffixes=c("g", "h"))
########################################################
##### Covariates
#########################################################
veg2012 = read.csv("2012_Veg.csv", header=T)
veg2013 = read.csv("2013_veg.csv", header=T)
### 2012 ###
veg12sub = veg2012[,c("bv","region", "round", "effortm", "habtype","dua", "dista", "id", "spp", "impounda", "canwr", "region", "int", "short", "tall", "up", "water", "wood", "bga", "bg", "algae", "other", "crop", "waterp", "woodp", "waterd")]
veg12r2 = subset(veg12sub, round==2)
veg12r3 = subset(veg12sub, round==3)
veg12r2 = subset(veg12r2, veg12r2$habtype=="ms"|veg12r2$habtype=="pe")
meltv12r2 = melt(veg12r2)
castveg12r2 = cast(meltv12r2, impounda + habtype  +dua+dista+region~ variable, mean)
veg12r3 = subset(veg12r3, veg12r3$habtype=="ms"|veg12r3$habtype=="pe")
meltv12r3 = melt(veg12r3)
castveg12r3 = cast(meltv12r3, impounda + habtype +dua+dista+region~ variable, mean)
### 2013 ###
veg13sub = veg2013[,c("habtype", "effortm", "region","round","impounda","region", "canwr", "int", "dua", "dista", "short", "waterd", "water", "wood")]
veg13sub$woodp = ifelse(veg13sub$wood>0,1,0)
veg13sub$waterp = ifelse(veg13sub$water>0,1,0)
veg13r1 = subset(veg13sub, round==1)
veg13r1 = subset(veg13r1, veg13r1$habtype=="ms"|veg13r1$habtype=="pe")
veg13r2 = subset(veg13sub, round==2)
veg13r2 = subset(veg13r2, veg13r2$habtype=="ms"|veg13r2$habtype=="pe")
veg13r3 = subset(veg13sub, round==3)
veg13r3 = subset(veg13r3, veg13r3$habtype=="ms"|veg13r3$habtype=="pe")
veg13r4 = subset(veg13sub, round==4)
veg13r4 = subset(veg13r4, veg13r4$habtype=="ms"|veg13r4$habtype=="pe")
meltv13r1 = melt(veg13r1)
castveg13r1 = cast(meltv13r1, impounda + habtype + dua+ dista+ region ~ variable, mean)
meltv13r2 = melt(veg13r2)
castveg13r2 = cast(meltv13r2, impounda+ habtype +  dua+dista+ region~ variable, mean)
meltv13r3 = melt(veg13r3)
castveg13r3 = cast(meltv13r3, impounda + habtype+  dua+ dista+region~ variable, mean)
meltv13r4 = melt(veg13r4)
castveg13r4 = cast(meltv13r4, impounda + habtype+  dua+ dista+region~ variable, mean)
####Create Lists of Impoundments with birds & covs
#List of what is in the Sora files
vi12r2 = data.frame("impounda"=merge12_2b$impounda,1)
vi12r3 = data.frame("impounda"=merge12_3b$impounda,1)
vi13r1 = data.frame("impounda"=merge13_1g$impounda,1)
vi13r2 = data.frame("impounda"=merge13_2g$impounda,1)
vi13r3 = data.frame("impounda"=merge13_3g$impounda,1)
vi13r4 = data.frame("impounda"=merge13_4g$impounda,1)
#list of what is in the cov files
covi12r2 = data.frame("impounda"=castveg12r2$impounda,1)
covi12r3 = data.frame("impounda"=castveg12r3$impounda,1)
covi13r1 = data.frame("impounda"=castveg13r1$impounda,1)
covi13r2 = data.frame("impounda"=castveg13r2$impounda,1)
covi13r3 = data.frame("impounda"=castveg13r3$impounda,1)
covi13r4 = data.frame("impounda"=castveg13r4$impounda,1)
id12r2 = merge(vi12r2, covi12r2, by="impounda")
id12r3 = merge(vi12r3, covi12r3, by="impounda")
id13r1 = merge(vi13r1, covi13r1, by="impounda")
id13r2 = merge(vi13r2, covi13r2, by="impounda")
id13r3 = merge(vi13r3, covi13r3, by="impounda")
id13r4 = merge(vi13r4, covi13r4, by="impounda")
mmerge13r1 = merge(id13r1,merge13_1g,  by="impounda", all=F)
write.csv(mmerge13r1, "20131whead.csv")
head20131 = read.csv("20131whead.csv", header=T)
head20131
head20131sub = head20131[,5:100]
nrow(head20131sub)
write.csv(head20131sub, "2013r1_sora.csv", row.names=F)
mveg13r1 = merge(id13r1,castveg13r1,  by="impounda",all=F)
nrow(mveg13r1)
mveg13r1 = merge(id13r1,castveg13r1,  by="impounda",all=F)
write.csv(mveg13r1, "2013r1_cov.csv", row.names=F)
mmerge13r4 = merge(id13r4,merge13_4g,  by="impounda", all=F)
write.csv(mmerge13r4, "20134whead.csv")
head20134 = read.csv("20134whead.csv", header=T)
head20134
head20134sub = head20134[,5:100]
write.csv(head20134sub, "2013r4_sora.csv", row.names=F)
nrow(head20134sub)
mveg13r4 = merge(id13r4,castveg13r4,  by="impounda",all=F)
nrow(mveg13r4)
write.csv(mveg13r4, "2013r4_cov.csv", row.names=F)
#generating the input files for gdistsamp analyis
library(reshape)
setwd("C:/Users/avanderlaar/Dropbox/r/Distance")
#############################################################
###########Sora
############################################################
#2012 birds
birds12all = read.csv("Birds2012.csv", header=T)
birds13all = read.csv("Birds2013.csv", header=T)
birds12 = subset(birds12all, spp=="s")
birds13 = subset(birds13all, spp=="s")
#first the data has to be binned. We use 12 bins 0-1, 1-2, etc etc since our farthest observation is a 12
birds12$bin1 = ifelse(birds12$distance<1,1,0)
birds12$bin2 = ifelse(birds12$distance<2,ifelse(birds12$distance>.9,1,0),0)
birds12$bin3 = ifelse(birds12$distance<3,ifelse(birds12$distance>1.9,1,0),0)
birds12$bin4 = ifelse(birds12$distance<4,ifelse(birds12$distance>2.9,1,0),0)
birds12$bin5 = ifelse(birds12$distance<5,ifelse(birds12$distance>3.9,1,0),0)
birds12$bin6 = ifelse(birds12$distance<6,ifelse(birds12$distance>4.9,1,0),0)
birds12$bin7 = ifelse(birds12$distance<7,ifelse(birds12$distance>5.9,1,0),0)
birds12$bin8 = ifelse(birds12$distance<8,ifelse(birds12$distance>6.9,1,0),0)
birds12$bin9 = ifelse(birds12$distance<9,ifelse(birds12$distance>7.9,1,0),0)
birds12$bin10 = ifelse(birds12$distance<10,ifelse(birds12$distance>8.9,1,0),0)
birds12$bin11 = ifelse(birds12$distance<11,ifelse(birds12$distance>9.9,1,0),0)
birds12$bin12 = ifelse(birds12$distance<12,ifelse(birds12$distance>10.9,1,0),0)
birds13$bin1 = ifelse(birds13$distance<1,1,0)
birds13$bin2 = ifelse(birds13$distance<2,ifelse(birds13$distance>.9,1,0),0)
birds13$bin3 = ifelse(birds13$distance<3,ifelse(birds13$distance>1.9,1,0),0)
birds13$bin4 = ifelse(birds13$distance<4,ifelse(birds13$distance>2.9,1,0),0)
birds13$bin5 = ifelse(birds13$distance<5,ifelse(birds13$distance>3.9,1,0),0)
birds13$bin6 = ifelse(birds13$distance<6,ifelse(birds13$distance>4.9,1,0),0)
birds13$bin7 = ifelse(birds13$distance<7,ifelse(birds13$distance>5.9,1,0),0)
birds13$bin8 = ifelse(birds13$distance<8,ifelse(birds13$distance>6.9,1,0),0)
birds13$bin9 = ifelse(birds13$distance<9,ifelse(birds13$distance>7.9,1,0),0)
birds13$bin10 = ifelse(birds13$distance<10,ifelse(birds13$distance>8.9,1,0),0)
birds13$bin11 = ifelse(birds13$distance<11,ifelse(birds13$distance>9.9,1,0),0)
birds13$bin12 = ifelse(birds13$distance<12,ifelse(birds13$distance>10.9,1,0),0)
round2_12 = subset(birds12, round==2)
round2_12s = round2_12[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round3_12 = subset(birds12, round==3)
round3_12s = round3_12[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round1_13 = subset(birds13, round==1)
round1_13s = round1_13[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round2_13 = subset(birds13, round==2)
round2_13s = round2_13[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round3_13 = subset(birds13, round==3)
round3_13s = round3_13[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
round4_13 = subset(birds13, round==4)
round4_13s = round4_13[,c("impounda", "canwr", "region", "nighta", "bin1", "bin2", "bin3", "bin4", "bin5", "bin6", "bin7", "bin8", "bin9", "bin10", "bin11", "bin12")]
#2012 round 2
melt12_2 = melt(round2_12s)
cast12_2 = cast(melt12_2, impounda ~ variable | nighta, sum)
merge12_2a = merge(cast12_2$a, cast12_2$b, by="impounda", all=T)
merge12_2b = merge(merge12_2a, cast12_2$c, by="impounda", all=T)
#2012 round 3
melt12_3 = melt(round3_12s)
cast12_3 = cast(melt12_3, impounda ~ variable | nighta, sum)
merge12_3a = merge(cast12_3$a, cast12_3$b, by="impounda", all=T)
merge12_3b = merge(merge12_3a, cast12_3$c, by="impounda", all=T)
#2013 round 1
melt13_1 = melt(round1_13s)
cast13_1 = cast(melt13_1, impounda ~ variable | nighta, sum)
cast13_1g = data.frame(impounda="34A", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_1h = data.frame(impounda="38A", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
merge13_1a = merge(cast13_1$a, cast13_1$b, by="impounda", all=T, suffixes=c("a", "b"))
merge13_1b = merge(merge13_1a, cast13_1$c, by="impounda", all=T, suffixes=c("b", "c"))
merge13_1c = merge(merge13_1b, cast13_1$d, by="impounda", all=T, suffixes=c("c", "d"))
merge13_1d = merge(merge13_1c, cast13_1$e, by="impounda", all=T, suffixes=c("d", "e"))
merge13_1e = merge(merge13_1d, cast13_1$f, by="impounda", all=T, suffixes=c("e", "f"))
merge13_1f = merge(merge13_1e, cast13_1g, by="impounda", all=T, suffixes=c("f", "g"))
merge13_1g = merge(merge13_1f, cast13_1h, by="impounda", all=T, suffixes=c("g", "h"))
#2013 round 2
melt13_2 = melt(round2_13s)
cast13_2 = cast(melt13_2, impounda ~ variable | nighta, sum)
cast13_2f = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_2g = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_2h = data.frame(impounda="38a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
merge13_2a = merge(cast13_2$a, cast13_2$b, by="impounda", all=T, suffixes=c("a", "b"))
merge13_2b = merge(merge13_2a, cast13_2$c, by="impounda", all=T, suffixes=c("b", "c"))
merge13_2c = merge(merge13_2b, cast13_2$d, by="impounda", all=T, suffixes=c("c", "d"))
merge13_2d = merge(merge13_2c, cast13_2$e, by="impounda", all=T, suffixes=c("d", 'e'))
merge13_2e = merge(merge13_2d, cast13_2f, by="impounda", all=T, suffixes=c("e", "f"))
merge13_2f = merge(merge13_2e, cast13_2g, by="impounda", all=T, suffixes=c("f", "g"))
merge13_2g = merge(merge13_2f, cast13_2h, by="impounda", all=T, suffixes=c("g", "h"))
#2013 round 3
melt13_3 = melt(round3_13s)
cast13_3 = cast(melt13_3, impounda ~ variable | nighta, sum)
merge13_3a = merge(cast13_3$a, cast13_3$b, by="impounda", all=T, suffixes=c("a", "b"))
merge13_3b = merge(merge13_3a, cast13_3$c, by="impounda", all=T, suffixes=c("b", "c"))
merge13_3c = merge(merge13_3b, cast13_3$d, by="impounda", all=T, suffixes=c("c", "d"))
merge13_3d = merge(merge13_3c, cast13_3$e, by="impounda", all=T, suffixes=c("d", "e"))
merge13_3e = merge(merge13_3d, cast13_3$f, by="impounda", all=T, suffixes=c("e", "f"))
merge13_3f = merge(merge13_3e, cast13_3$g, by="impounda", all=T, suffixes=c("f", "g"))
merge13_3g = merge(merge13_3f, cast13_3$h, by="impounda", all=T, suffixes=c("g", "h"))
#2013 round 4
melt13_4 = melt(round4_13s)
cast13_4 = cast(melt13_4, impounda ~ variable | nighta, sum)
cast13_4b = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_4d = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
cast13_4h = data.frame(impounda="34a", bin1=NA, bin2=NA, bin3=NA, bin4=NA,bin5=NA, bin6=NA, bin7=NA, bin8=NA, bin9=NA, bin10=NA, bin11=NA, bin12=NA)
merge13_4a = merge(cast13_4$a, cast13_4b, by="impounda", all=T, suffixes=c("a", "b"))
merge13_4b = merge(merge13_4a, cast13_4$c, by="impounda", all=T, suffixes=c("b", "c"))
merge13_4c = merge(merge13_4b, cast13_4d, by="impounda", all=T, suffixes=c("c", "d"))
merge13_4d = merge(merge13_4c, cast13_4$e, by="impounda", all=T, suffixes=c("d", "e"))
merge13_4e = merge(merge13_4d, cast13_4$f, by="impounda", all=T, suffixes=c("e", "f"))
merge13_4f = merge(merge13_4e, cast13_4$g, by="impounda", all=T, suffixes=c("f", "g"))
merge13_4g = merge(merge13_4f, cast13_4h, by="impounda", all=T, suffixes=c("g", "h"))
########################################################
##### Covariates
#########################################################
veg2012 = read.csv("2012_Veg.csv", header=T)
veg2013 = read.csv("2013_veg.csv", header=T)
### 2012 ###
veg12sub = veg2012[,c("bv","region", "round", "effortm", "habtype","dua", "dista", "id", "spp", "impounda", "canwr", "region", "int", "short", "tall", "up", "water", "wood", "bga", "bg", "algae", "other", "crop", "waterp", "woodp", "waterd")]
veg12r2 = subset(veg12sub, round==2)
veg12r3 = subset(veg12sub, round==3)
veg12r2 = subset(veg12r2, veg12r2$habtype=="ms"|veg12r2$habtype=="pe")
meltv12r2 = melt(veg12r2)
castveg12r2 = cast(meltv12r2, impounda + habtype  +dua+dista+region~ variable, mean)
veg12r3 = subset(veg12r3, veg12r3$habtype=="ms"|veg12r3$habtype=="pe")
meltv12r3 = melt(veg12r3)
castveg12r3 = cast(meltv12r3, impounda + habtype +dua+dista+region~ variable, mean)
### 2013 ###
veg13sub = veg2013[,c("habtype", "effortm", "region","round","impounda","region", "canwr", "int", "dua", "dista", "short", "waterd", "water", "wood")]
veg13sub$woodp = ifelse(veg13sub$wood>0,1,0)
veg13sub$waterp = ifelse(veg13sub$water>0,1,0)
veg13r1 = subset(veg13sub, round==1)
veg13r1 = subset(veg13r1, veg13r1$habtype=="ms"|veg13r1$habtype=="pe")
veg13r2 = subset(veg13sub, round==2)
veg13r2 = subset(veg13r2, veg13r2$habtype=="ms"|veg13r2$habtype=="pe")
veg13r3 = subset(veg13sub, round==3)
veg13r3 = subset(veg13r3, veg13r3$habtype=="ms"|veg13r3$habtype=="pe")
veg13r4 = subset(veg13sub, round==4)
veg13r4 = subset(veg13r4, veg13r4$habtype=="ms"|veg13r4$habtype=="pe")
meltv13r1 = melt(veg13r1)
castveg13r1 = cast(meltv13r1, impounda + habtype + dua+ dista+ region ~ variable, mean)
meltv13r2 = melt(veg13r2)
castveg13r2 = cast(meltv13r2, impounda+ habtype +  dua+dista+ region~ variable, mean)
meltv13r3 = melt(veg13r3)
castveg13r3 = cast(meltv13r3, impounda + habtype+  dua+ dista+region~ variable, mean)
meltv13r4 = melt(veg13r4)
castveg13r4 = cast(meltv13r4, impounda + habtype+  dua+ dista+region~ variable, mean)
####Create Lists of Impoundments with birds & covs
#List of what is in the Sora files
vi12r2 = data.frame("impounda"=merge12_2b$impounda,1)
vi12r3 = data.frame("impounda"=merge12_3b$impounda,1)
vi13r1 = data.frame("impounda"=merge13_1g$impounda,1)
vi13r2 = data.frame("impounda"=merge13_2g$impounda,1)
vi13r3 = data.frame("impounda"=merge13_3g$impounda,1)
vi13r4 = data.frame("impounda"=merge13_4g$impounda,1)
#list of what is in the cov files
covi12r2 = data.frame("impounda"=castveg12r2$impounda,1)
covi12r3 = data.frame("impounda"=castveg12r3$impounda,1)
covi13r1 = data.frame("impounda"=castveg13r1$impounda,1)
covi13r2 = data.frame("impounda"=castveg13r2$impounda,1)
covi13r3 = data.frame("impounda"=castveg13r3$impounda,1)
covi13r4 = data.frame("impounda"=castveg13r4$impounda,1)
id12r2 = merge(vi12r2, covi12r2, by="impounda")
id12r3 = merge(vi12r3, covi12r3, by="impounda")
id13r1 = merge(vi13r1, covi13r1, by="impounda")
id13r2 = merge(vi13r2, covi13r2, by="impounda")
id13r3 = merge(vi13r3, covi13r3, by="impounda")
id13r4 = merge(vi13r4, covi13r4, by="impounda")
#create sora files
mmerge12r2 = merge(id12r2,merge12_2b,  by="impounda", all.x=F)
write.csv(mmerge12r2, "2012whead.csv")
head2012 = read.csv("2012whead.csv", header=FALSE)
head2012sub = head2012[2:21,5:40]
write.csv(head2012sub, "2012r2_sora.csv", row.names=F, col.names=F)
mmerge12r3 = merge(id12r3,merge12_3b,  by="impounda", all=F)
write.csv(mmerge12r3, "20123whead.csv")
head20123 = read.csv("20123whead.csv", header=FALSE)
head20123sub = head20123[2:21,5:40]
write.csv(head20123sub, "2012r3_sora.csv", row.names=F)
mmerge13r1 = merge(id13r1,merge13_1g,  by="impounda", all=F)
write.csv(mmerge13r1, "20131whead.csv")
head20131 = read.csv("20131whead.csv", header=T)
head20131sub = head20131[,5:100]
write.csv(head20131sub, "2013r1_sora.csv", row.names=F)
mmerge13r2 = merge(id13r2,merge13_2g,  by="impounda", all=F)
write.csv(mmerge13r2, "20132whead.csv")
head20132 = read.csv("20132whead.csv", header=T)
head20132sub = head20132[1:21,5:100]
write.csv(head20132sub, "2013r2_sora.csv", row.names=F)
mmerge13r3 = merge(id13r3,merge13_3g,  by="impounda", all=F)
write.csv(mmerge13r3, "20133whead.csv")
head20133 = read.csv("20133whead.csv", header=FALSE)
head20133sub = head20133[2:24,5:100]
write.csv(head20133sub, "2013r3_sora.csv", row.names=F)
mmerge13r4 = merge(id13r4,merge13_4g,  by="impounda", all=F)
write.csv(mmerge13r4, "20134whead.csv")
head20134 = read.csv("20134whead.csv", header=T)
head20134sub = head20134[,5:100]
write.csv(head20134sub, "2013r4_sora.csv", row.names=F)
#create covariate files
mveg12r2 = merge(id12r2,castveg12r2,  by="impounda", all.x=T)
write.csv(mveg12r2, "2012r2_cov.csv", row.names=F)
mveg12r3 = merge(id12r3,castveg12r3,  by="impounda",all=F)
write.csv(mveg12r3, "2012r3_cov.csv", row.names=F)
mveg13r1 = merge(id13r1,castveg13r1,  by="impounda",all=F)
write.csv(mveg13r1, "2013r1_cov.csv", row.names=F)
mveg13r2 = merge(id13r2,castveg13r2,  by="impounda",all=F)
write.csv(mveg13r2, "2013r2_cov.csv", row.names=F)
mveg13r3 = merge(id13r3,castveg13r3,  by="impounda",all=F)
write.csv(mveg13r3, "2013r3_cov.csv", row.names=F)
mveg13r4 = merge(id13r4,castveg13r4,  by="impounda",all=F)
write.csv(mveg13r4, "2013r4_cov.csv", row.names=F)
#read in sora data
sora13r1 <- as.matrix(read.csv('2013r1_sora.csv', header=T))
#read in the covariate data #organized by impoundment.
cov13r1 <- read.csv('2013r1_cov.csv', header=T)
#subset the covariates we need
cov13r1 <- cov13r1[,c("habtype","region","dua","dista","int","effortm","waterd")]
#drop upland units, since there aren't enough of them
cov13r1 <- subset(cov13r1, cov13r1$habtype=="ms"|cov13r1$habtype=="pe")
#the distance bins
cutpt = as.numeric(c(0,1,2,3,4,5,6,7,8,9,10,11,12)) #the fartherest distance is 12
#Unmarked Data Frame
umf13r1 = unmarkedFrameGDS(y=sora13r1,
numPrimary=8,
siteCovs = cov13r1,
survey="line",
dist.breaks=cutpt,
unitsIn="m",
tlength=cov13r1$effortm,
)
#sora
sora13r4 <- as.matrix(read.csv('2013r4_sora.csv', header=T))
#read in the covariate data #organized by impoundment.
cov13r4 <- read.csv('2013r4_cov.csv', header=T)
#subset the covariates
cov13r4 <- cov13r4[,c("habtype","region","dua","dista","int","effortm","waterd")]
#drop upland units, since there aren't enough of them
cov13r4 <- subset(cov13r4, cov13r4$habtype=="ms"|cov13r4$habtype=="pe")
# the distance bins
cutpt = as.numeric(c(0,1,2,3,4,5,6,7,8,9,10,11,12))
#Unmarked Data Frame
umf13r4 = unmarkedFrameGDS(y=sora13r4,
numPrimary=8,
siteCovs = cov13r4,
survey="line",
dist.breaks=cutpt,
unitsIn="m",
tlength=cov13r4$effortm,
)
#read in the sora observations
sora13r3 <- as.matrix(read.csv("2013r3_sora.csv", header=T))
#read in the covariate data #organized by impoundment.
cov13r3 <- read.csv('2013r3_cov.csv', header=T)
#subset the covariates
cov13r3 <- cov13r3[,c("habtype","region","dua","dista","int","effortm","waterd")]
# #the distance bins
cutpt = as.numeric(c(0,1,2,3,4,5,6,7,8,9,10,11,12))
#Unmarked Data Frame
umf13r3 = unmarkedFrameGDS(y=sora13r3,
numPrimary=8,
siteCovs = cov13r3,
survey="line",
dist.breaks=cutpt,
unitsIn="m",
tlength=cov13r3$effortm,
)
sora13r4 <- as.matrix(read.csv('2013r4_sora.csv', header=T))
#read in the covariate data #organized by impoundment.
cov13r4 <- read.csv('2013r4_cov.csv', header=T)
#subset the covariates
cov13r4 <- cov13r4[,c("habtype","region","dua","dista","int","effortm","waterd")]
#drop upland units, since there aren't enough of them
cov13r4 <- subset(cov13r4, cov13r4$habtype=="ms"|cov13r4$habtype=="pe")
# the distance bins
cov13r4$region
library(Hmisc) #for the correlation stuff
library(AICcmodavg)#for AIC ranking
library(ggplot2) #for graphing
library(reshape) #for reshaping/melting
setwd("C:/Users/avanderlaar/Dropbox/R/Biometry_HW_3")
hw3 = read.csv("biometryhw3.csv", header=T)
#subset just what we are interested in
hw3 = subset(hw3, hw3$stream=="Bear"|hw3$stream=="Cave"|hw3$stream=="Falling")
#subset just the variables we are interested in, ignoring the ones that have missing values
hw3 = subset(hw3, select=c("depth","substrate","velocity","totdenarea"))
#visual examination
#puts the data into long form, instead of wide form
mel = melt(hw3)
#assumption of homogeneity of variance
ggplot()+  geom_boxplot(data=mel, aes(x=variable, y=value))
#assumption of normality
ggplot() +  geom_histogram(data=mel, aes(x=value, fill=variable), position=position_dodge()) +facet_wrap(~variable, scales="free")
#depth is skewed
#substrate is ok
#velocity is skewed heavily
#totdenarea is skewed heavily
hw3s = data.frame(hw3)
#transform to get close to a normal distribution
hw3s$depth4 = hw3s$depth^(1/4)
hw3s$velocity4 = hw3$velocity^(1/4)
hw3s$totdenarea4 = hw3$totdenarea^(1/4)
hw3s = subset(hw3s, select=c("depth4","cover4","velocity4", "totdenarea4","canopy","do","spc","substrate","temp"))
melts = melt(hw3s)
#look at everything again
ggplot() +  geom_histogram(data=melts, aes(x=value, fill=variable), position=position_dodge()) +facet_wrap(~variable,scales="free")
#these look much better, though spc is still a problem child
setwd("C:/Users/avanderlaar/Dropbox/R/Biometry_HW_3")
hw3 = read.csv("biometryhw3.csv", header=T)
#subset just what we are interested in
hw3 = subset(hw3, hw3$stream=="Bear"|hw3$stream=="Cave"|hw3$stream=="Falling")
#subset just the variables we are interested in, ignoring the ones that have missing values
hw3 = subset(hw3, select=c("depth","substrate","velocity","totdenarea"))
#visual examination
#puts the data into long form, instead of wide form
mel = melt(hw3)
#assumption of homogeneity of variance
ggplot()+  geom_boxplot(data=mel, aes(x=variable, y=value))
#assumption of normality
ggplot() +  geom_histogram(data=mel, aes(x=value, fill=variable), position=position_dodge()) +facet_wrap(~variable, scales="free")
#depth is skewed
#substrate is ok
#velocity is skewed heavily
#totdenarea is skewed heavily
hw3s = data.frame(hw3)
#transform to get close to a normal distribution
hw3s$depth4 = hw3s$depth^(1/4)
hw3s = data.frame(hw3)
#transform to get close to a normal distribution
hw3s$depth4 = hw3s$depth^(1/4)
hw3s$velocity4 = hw3$velocity^(1/4)
hw3s$totdenarea4 = hw3$totdenarea^(1/4)
hw3s = subset(hw3s, select=c("depth4","velocity4", "totdenarea4","substrate"))
melts = melt(hw3s)
#look at everything again
ggplot() +  geom_histogram(data=melts, aes(x=value, fill=variable), position=position_dodge()) +facet_wrap(~variable,scales="free")
#these look much better, though spc is still a
