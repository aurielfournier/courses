flight1 <- matrix(1,1,2,3)
flight2 <- matrix(b,a,c,d)
flight2 <- matrix('b','a','c','d')
dates<-apply(dates,2, as.numeric) ##this is to make sure they came in as a numeric not as a character or factor
varmonth<-cbind(c(1:12),c(0,31,59,90,120,151,181,212,243,273,304,334))
dates<-apply(dates,2, as.numeric) ##this is to make sure they came in as a numeric not as a character or factor
varmonth<-cbind(c(1:12),c(0,31,59,90,120,151,181,212,243,273,304,334))
juldates<-data.frame(date=as.numeric())
for(i in 1:nrow(dates)) {juldates[i,1]<-varmonth[which(dates[i,1]==varmonth[,1]),2]+dates[i,2]
}
juldates ##heres your new numbers
library("moveud", lib.loc="C:/Program Files/R/R-3.0.2/library")
install.packages("move")
install.packages("BBMM")
install.packages("maptools")
install.packages("PBSmapping")
fishSurvival.Bayes = function() {
fishSurvival.Bayes = function() {
# assign data values
y=c(15,11,12,5,12)
lambda=50
a=1
b=1
# model specification in WinBUGS
modelFilename = 'fishSurvival.txt'
cat('
model {
phi ~ dbeta(a,b)
for (i in 1:n) {
N[i] ~ dpois(lambda)
y[i] ~ dbin(phi, N[i])
}
}
}
', fill=TRUE, file=modelFilename)
# arguments for bugs()
data = list(n=length(y), y=y, lambda=lambda, a=a, b=b)
params = list('phi','N')
inits = function() {
phi = rbeta(1,a,b)
N = rpois(length(y),lambda)
list(phi=phi, N=N)
}
# call to bugs()
library(R2WinBUGS)
fit = bugs(data, inits, params, model.file=modelFilename,
n.chains=1, n.iter=100000, n.burnin=50000, n.thin=5,  bugs.seed=sample(1:9999,size=1), debug=FALSE, DIC=FALSE)
phiPosterior = fit$sims.matrix[,'phi']
summary(phiPosterior)
}
}
fishSurvival.Bayes = function() {
# assign data values
y=c(15,11,12,5,12)
lambda=50
a=1
b=1
# model specification in WinBUGS
modelFilename = 'fishSurvival.txt'
cat('
model {
phi ~ dbeta(a,b)
for (i in 1:n) {
N[i] ~ dpois(lambda)
y[i] ~ dbin(phi, N[i])
}
}
}
', fill=TRUE, file=modelFilename)
# arguments for bugs()
data = list(n=length(y), y=y, lambda=lambda, a=a, b=b)
params = list('phi','N')
inits = function() {
phi = rbeta(1,a,b)
N = rpois(length(y),lambda)
list(phi=phi, N=N)
}
# call to bugs()
library(R2WinBUGS)
fit = bugs(data, inits, params, model.file=modelFilename,
n.chains=1, n.iter=100000, n.burnin=50000, n.thin=5,  bugs.seed=sample(1:9999,size=1), debug=FALSE, DIC=FALSE)
phiPosterior = fit$sims.matrix[,'phi']
summary(phiPosterior)
}
fishSurvival.Bayes
summary(phiPosterior)
fishSurvival.Bayes = function() {
3600*3
setwd("C:/Users/avanderlaar/Dropbox/R/Biometry_Lab2")
library(pwr)
library(compute.es)
#its much better, and makes for more accessible and reproducible data to save your data
#and import it into R via a csv file
#you can easily convert excel files into csvs in excel
#each csv file will be one sheet from excel
#so select the sheet you want to convert
#go to save as
#select CSV (Comman delimited)
#put in an appropriate file name (WITH NO SPACES, underscores are fine)
#repeat for any additional sheets
trout = read.csv('Trout.csv', header=TRUE)
beetle = read.csv('Beetle.csv', header=TRUE)
crayfish = read.csv('Crayfish.csv', header=TRUE)
#two sided t-test power analysis of trout
#calculate effect size
e.s.trout = mean(trout$c.growth) - mean(trout$e.growth)
#gives you the current power of your test
pwr.t.test(n=NULL, d=e.s.trout, sig.level=0.05, power=0.8, alternative="two.sided")
#this will throw an error
#Error in uniroot(function(n) eval(p.body) - power, c(2 + 1e-10, 1e+07)) :
#f() values at end points not of opposite sign
#this means that you need a really tiny sample size
#try changing d (effect size) so that it is much smaller
pwr.t.test(n=NULL, d=5, sig.level=0.05, power=0.8, alternative="two.sided")
#and now it runs, because we actually need some samples now
#note that n is the sample size in each group
#beetle data
head(beetle)
#total # of beetles
totalb = beetle$Bright.Red + beetle$Not.BR
#proportion of Bright.Red
pro.br = beetle$Bright.Red/totalb
#proportion of Not.Br
pro.not = beetle$Not.BR/totalb
#effect size
e.s.beetle = pro.br-pro.not
#power analysis for two proportions
pwr.2p.test(h=e.s.beetle , n=NULL, sig.level=0.5, power=0.8, alternative="two.sided")
#crayfish data
summary(crayfish)
cray05 = crayfish[crayfish$Year==2005,]
cray06 = crayfish[crayfish$Year==2006,]
cray07 = crayfish[crayfish$Year==2007,]
pwr.anova.test(k=3 , n=NULL , f=e.s.crayfish , sig.level=0.5, power=0.8)
setwd("C:/Users/avanderlaar/Dropbox/R/Biometry_Lab2_Power_Analysis")
library(pwr)
library(compute.es)
#its much better, and makes for more accessible and reproducible data to save your data
#and import it into R via a csv file
#you can easily convert excel files into csvs in excel
#each csv file will be one sheet from excel
#so select the sheet you want to convert
#go to save as
#select CSV (Comman delimited)
#put in an appropriate file name (WITH NO SPACES, underscores are fine)
#repeat for any additional sheets
trout = read.csv('Trout.csv', header=TRUE)
beetle = read.csv('Beetle.csv', header=TRUE)
crayfish = read.csv('Crayfish.csv', header=TRUE)
#two sided t-test power analysis of trout
#calculate effect size
e.s.trout = mean(trout$c.growth) - mean(trout$e.growth)
#gives you the current power of your test
pwr.t.test(n=NULL, d=e.s.trout, sig.level=0.05, power=0.8, alternative="two.sided")
#this will throw an error
#Error in uniroot(function(n) eval(p.body) - power, c(2 + 1e-10, 1e+07)) :
#f() values at end points not of opposite sign
#this means that you need a really tiny sample size
#try changing d (effect size) so that it is much smaller
pwr.t.test(n=NULL, d=5, sig.level=0.05, power=0.8, alternative="two.sided")
#and now it runs, because we actually need some samples now
#note that n is the sample size in each group
#beetle data
head(beetle)
#total # of beetles
totalb = beetle$Bright.Red + beetle$Not.BR
#proportion of Bright.Red
pro.br = beetle$Bright.Red/totalb
#proportion of Not.Br
pro.not = beetle$Not.BR/totalb
#effect size
e.s.beetle = pro.br-pro.not
#power analysis for two proportions
pwr.2p.test(h=e.s.beetle , n=NULL, sig.level=0.5, power=0.8, alternative="two.sided")
#crayfish data
summary(crayfish)
cray05 = crayfish[crayfish$Year==2005,]
cray06 = crayfish[crayfish$Year==2006,]
cray07 = crayfish[crayfish$Year==2007,]
pwr.anova.test(k=3 , n=NULL , f=e.s.crayfish , sig.level=0.5, power=0.8)
install.packages(c("pwr", "compute.es"))
#its much better, and makes for more accessible and reproducible data to save your data
#and import it into R via a csv file
#you can easily convert excel files into csvs in excel
#each csv file will be one sheet from excel
#so select the sheet you want to convert
#go to save as
#select CSV (Comman delimited)
#put in an appropriate file name (WITH NO SPACES, underscores are fine)
#repeat for any additional sheets
trout = read.csv('Trout.csv', header=TRUE)
beetle = read.csv('Beetle.csv', header=TRUE)
crayfish = read.csv('Crayfish.csv', header=TRUE)
#two sided t-test power analysis of trout
#calculate effect size
e.s.trout = mean(trout$c.growth) - mean(trout$e.growth)
#gives you the current power of your test
pwr.t.test(n=NULL, d=e.s.trout, sig.level=0.05, power=0.8, alternative="two.sided")
#this will throw an error
#Error in uniroot(function(n) eval(p.body) - power, c(2 + 1e-10, 1e+07)) :
#f() values at end points not of opposite sign
#this means that you need a really tiny sample size
#try changing d (effect size) so that it is much smaller
pwr.t.test(n=NULL, d=5, sig.level=0.05, power=0.8, alternative="two.sided")
#and now it runs, because we actually need some samples now
#note that n is the sample size in each group
#beetle data
head(beetle)
#total # of beetles
totalb = beetle$Bright.Red + beetle$Not.BR
#proportion of Bright.Red
pro.br = beetle$Bright.Red/totalb
#proportion of Not.Br
pro.not = beetle$Not.BR/totalb
#effect size
e.s.beetle = pro.br-pro.not
#power analysis for two proportions
pwr.2p.test(h=e.s.beetle , n=NULL, sig.level=0.5, power=0.8, alternative="two.sided")
#crayfish data
summary(crayfish)
cray05 = crayfish[crayfish$Year==2005,]
cray06 = crayfish[crayfish$Year==2006,]
cray07 = crayfish[crayfish$Year==2007,]
pwr.anova.test(k=3 , n=NULL , f=e.s.crayfish , sig.level=0.5, power=0.8)
library(pwr)
library(compute.es)
#its much better, and makes for more accessible and reproducible data to save your data
#and import it into R via a csv file
#you can easily convert excel files into csvs in excel
#each csv file will be one sheet from excel
#so select the sheet you want to convert
#go to save as
#select CSV (Comman delimited)
#put in an appropriate file name (WITH NO SPACES, underscores are fine)
#repeat for any additional sheets
trout = read.csv('Trout.csv', header=TRUE)
beetle = read.csv('Beetle.csv', header=TRUE)
crayfish = read.csv('Crayfish.csv', header=TRUE)
#two sided t-test power analysis of trout
#calculate effect size
e.s.trout = mean(trout$c.growth) - mean(trout$e.growth)
#gives you the current power of your test
pwr.t.test(n=NULL, d=e.s.trout, sig.level=0.05, power=0.8, alternative="two.sided")
#this will throw an error
#Error in uniroot(function(n) eval(p.body) - power, c(2 + 1e-10, 1e+07)) :
#f() values at end points not of opposite sign
#this means that you need a really tiny sample size
#try changing d (effect size) so that it is much smaller
pwr.t.test(n=NULL, d=5, sig.level=0.05, power=0.8, alternative="two.sided")
#and now it runs, because we actually need some samples now
#note that n is the sample size in each group
#beetle data
head(beetle)
#total # of beetles
totalb = beetle$Bright.Red + beetle$Not.BR
#proportion of Bright.Red
pro.br = beetle$Bright.Red/totalb
#proportion of Not.Br
pro.not = beetle$Not.BR/totalb
#effect size
e.s.beetle = pro.br-pro.not
#power analysis for two proportions
pwr.2p.test(h=e.s.beetle , n=NULL, sig.level=0.5, power=0.8, alternative="two.sided")
#crayfish data
summary(crayfish)
cray05 = crayfish[crayfish$Year==2005,]
cray06 = crayfish[crayfish$Year==2006,]
cray07 = crayfish[crayfish$Year==2007,]
pwr.anova.test(k=3 , n=NULL , f=e.s.crayfish , sig.level=0.5, power=0.8)
library(reshape)
library(Hmisc)
library(ggplot2)
library(AICcmodavg)#for AIC ranking
library(rms)
library(ds)
